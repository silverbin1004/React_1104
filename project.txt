# Day46 문제

1. **질문**: JSX란 무엇인가요?
    - **답변**: 자바스크립트의 확장 문법으로, html과 유사한 구문을 자바스크립트 코드 내에서 작성할 수 있게 해준다.
2. **질문**: JSX에서 여러 요소를 반환할 때 감싸는 데 사용하는 것은 무엇인가요?
    - **답변**: <React.Fragment></React.Fragment> 또는 <></>를 사용한다.
3. **질문**: JSX에서 클래스를 지정할 때 어떤 속성을 사용하나요?
    - **답변**: className을 사용한다. 
4. **질문**: 조건부 렌더링이란 무엇인가요?
    - **답변**: 특정 조건에 따라 컴포넌트의 일부 또는 전체를 렌더링하는 기법이다.
5. **질문**: React에서 리스트를 렌더링할 때 어떤 배열 메서드를 주로 사용하나요?
    - **답변**: Map() 메서드를 사용한다.
6. **질문**: 리스트를 렌더링할 때 각 항목에 반드시 추가해야 하는 속성은 무엇인가요?
    - **답변**: 고유한 key 속성을 추가해야 한다.
7. **질문**: `key` 속성의 역할은 무엇인가요?
    - **답변**: 
    효율적인 DOM 업데이트 - 변경된 요소만 업데이트하여 효율성을 높임.
    컴포넌트 상태 유지 - 키가 변경되지 않으면 컴포넌트의 상태가 유지되며, 불필요한 렌더링을 방지한다.
    애니메이션 및 트랜지션 - 요소의 추가, 삭재, 재정렬 시 애니메이션 효과를 구현할 수 있다.
    컴포넌트 재사용 - 동일한 키를 가진 컴포넌트를 재사용하여 성능을 최적화할 수 있다.
    버그 방지 - 고유한 키를 사용하여 UI 버그를 방지한다.
    개발자 경험 향상 - 명확한 키 사용을 통해 코드의 가독성과 유지보수성을 높인다.
8. **질문**: Babel은 무엇을 하는 도구인가요?
    - **답변**: 자바스크립트 코드를 변환하는 트랜스파일러이다.
9. **질문**: 트랜스파일러와 컴파일러의 차이점은 무엇인가요?
    - **답변**: 트랜스파일러는 고급 언어를 다른 고급 언어로 변환하는 도구이고, 컴파일러는 고급 언어를 저급 언어로 변환하는 도구이다.
10. **질문**: 소스맵(Source Map)의 역할은 무엇인가요?
    - **답변**: 디버깅 시 개발자가 원본 코드를 볼 수 있도록 도와준다.
11. **질문**: JSX에서 이벤트 핸들러를 추가할 때 어떤 문법을 사용하나요?
    - **답변**: 이벤트 핸들러를 추가할 때는 카멜케이스로 된 속성을 사용하여 이벤트를 지정하고, 해당 이벤트가 발생했을 때 실행할 함수는 JSX의 중괄요{} 안에 넣는다.
12. **질문**: JSX에서 인라인 스타일을 적용할 때 어떤 자료형을 사용하나요?
    - **답변**: 자바스크립트 객체 형태의 자료형을 사용한다.
13. **질문**: React에서 조건부 렌더링 시 짧은 회로 평가(논리 AND)를 사용하는 방법은 무엇인가요?
    - **답변**: && 연산자를 사용한다. && 연산자를 사용하면, 왼쪽의 조건이 참일 때만 오른쪽의 표현식이 평가되고 렌더링된다.
14. **질문**: React 컴포넌트의 이름은 어떤 규칙을 따라야 하나요?
    - **답변**: 컴포넌트 이름은 대문자로 시작해야 한다.
15. **질문**: React에서 상태를 관리하기 위해 사용하는 Hook은 무엇인가요?
    - **답변**: useSate 를 사용한다.
